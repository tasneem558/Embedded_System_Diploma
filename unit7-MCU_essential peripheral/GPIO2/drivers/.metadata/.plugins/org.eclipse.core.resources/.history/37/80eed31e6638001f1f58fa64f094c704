/*
 * keypad.c
 *
 *  Created on: Jun 18, 2024
 *      Author: tasneem
 */

#include "../../HAL/KEYPAD_DRIVER/keypad.h"

int keypad_R[4] = {R0,R1,R2,R3};//rows of the keypad
int keypad_C[4] = {C0,C1,C2,C3};//columns of the keypad

void wait_msec(int x)
{
	unsigned int i,j;
	for(i=0;i<x;i++)
	{
		for(j=0;j<1000;j++);
	}
}

void KEYBAD_INIT()
{
	PinCfg.GPIO_PinNumber=R0;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(KEYPAD_PORT,&PinCfg);
	//	DATADir_KEYPAD_PORT &= ~((1<<R0) | (1<<R1) | (1<<R2) | (1<<R3));
	//	DATADir_KEYPAD_PORT |=  ((1<<C0) | (1<<C1) | (1<<C2) | (1<<C3));
	//	KEYPAD_PORT = 0xFF;

	PinCfg.GPIO_PinNumber=R1;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(KEYPAD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber=R2;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(KEYPAD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber=R3;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(KEYPAD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber=C0;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(KEYPAD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber=C1;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(KEYPAD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber=C2;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(KEYPAD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber=C3;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(KEYPAD_PORT,&PinCfg);

	MCAL_GPIO_WritePort(KEYPAD_PORT, 0xFF);
}
char KEYPAD_GETCHAR()
{
	int i,j;
	for(i=0;i<4;i++)
	{
		//		KEYPAD_PORT |= ((1<<keypad_C[0]) | (keypad_C[1]) | (keypad_C[2]) | (keypad_C[3]));
		//		KEYPAD_PORT &= ~(1<<keypad_C[i]);

		MCAL_GPIO_WritePin(KEYPAD_PORT, keypad_C[0], GPIO_PIN_SET);
		MCAL_GPIO_WritePin(KEYPAD_PORT, keypad_C[1], GPIO_PIN_SET);
		MCAL_GPIO_WritePin(KEYPAD_PORT, keypad_C[2], GPIO_PIN_SET);
		MCAL_GPIO_WritePin(KEYPAD_PORT, keypad_C[3], GPIO_PIN_SET);
		MCAL_GPIO_WritePin(KEYPAD_PORT, keypad_C[i], GPIO_PIN_RESET);
		for(j=0;j<4;j++)
		{
			if(MCAL_GPIO_ReadPin(KEYPAD_PORT, keypad_R[j]) == 0)
			{
				while(MCAL_GPIO_ReadPin(KEYPAD_PORT, keypad_R[j]) == 0);
				switch(i)
				{
				case(0):
				  {
					if(j==0)
						return '7';
					else if (j==1)
						return '4';
					else if (j==2)
						return '1';
					else if (j==1)
						return '!';
					break;
				   }
				case(1):
				   {
					if(j==0)
						return '8';
					else if (j==1)
						return '5';
					else if (j==2)
						return '2';
					else if (j==1)
						return '0';
					break;
				   }
				case(2):
				   {
					if(j==0)
						return '9';
					else if (j==1)
						return '6';
					else if (j==2)
						return '3';
					else if (j==1)
						return '=';
					break;
				   }
				case(3):
				   {
					if(j==0)
						return '/';
					else if (j==1)
						return '*';
					else if (j==2)
						return '-';
					else if (j==1)
						return '+';
					break;
				   }

				}
			}

		}
	}
	return 'N';
}
