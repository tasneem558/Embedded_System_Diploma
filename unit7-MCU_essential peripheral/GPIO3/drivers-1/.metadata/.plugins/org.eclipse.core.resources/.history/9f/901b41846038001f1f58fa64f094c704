/*
 * lcd.c
 *
 *  Created on: Jun 18, 2024
 *      Author: tasneem
 */

#include "../../HAL/LCD_DRIVER/lcd.h"

void wait(int x)
{
	unsigned int i,j;
	for(i=0;i<x;i++)
	{
		for(j=0;j<255;j++);
	}
}
//================================================================
void LCD_KICK(void)
{
	MCAL_GPIO_WritePin(LCD_CTRL, ENABLE_SWITCH, GPIO_PIN_SET);
	wait(50);
	MCAL_GPIO_WritePin(LCD_CTRL, ENABLE_SWITCH, GPIO_PIN_RESET);
}
//================================================================
void LCD_GOTO_XY(int line,int position)
{
	if(line ==1)
	{
		if(position >=0 && position <16)
		{
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW+position);
		}

	}
	else if(line==2)
	{
		if(position >=0 && position <16)
		{
			LCD_WRITE_COMMAND(LCD_BEGIN_AT_SECOND_ROW+position);
		}
	}
}
//================================================================
void LCD_isbusy(void)
{
	PinCfg.GPIO_PinNumber = GPIO_PIN_0;
	PinCfg.GPIO_Mode = GPIO_mode_INPUT_FLO;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_1;
	PinCfg.GPIO_Mode = GPIO_mode_INPUT_FLO;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_2;
	PinCfg.GPIO_Mode = GPIO_mode_INPUT_FLO;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_3;
	PinCfg.GPIO_Mode = GPIO_mode_INPUT_FLO;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_4;
	PinCfg.GPIO_Mode = GPIO_mode_INPUT_FLO;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_5;
	PinCfg.GPIO_Mode = GPIO_mode_INPUT_FLO;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_6;
	PinCfg.GPIO_Mode = GPIO_mode_INPUT_FLO;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_7;
	PinCfg.GPIO_Mode = GPIO_mode_INPUT_FLO;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	MCAL_GPIO_WritePin(LCD_CTRL, RW_SWITCH, GPIO_PIN_SET);
	MCAL_GPIO_WritePin(LCD_CTRL, RS_SWITCH, GPIO_PIN_RESET);
	LCD_KICK();
	MCAL_GPIO_WritePin(LCD_CTRL, RW_SWITCH, GPIO_PIN_RESET);
}
//================================================================
void LCD_clear_screen()
{
	LCD_WRITE_COMMAND(LCD_CLEAR_SCREEN);
}
//================================================================
void LCD_INIT(void)
{
	wait(25);
//	LCD_isbusy();

	//ENABLE_SWITCH,RS_SWITCH,RW_SWITCH PUSHBUTTON output:

	PinCfg.GPIO_PinNumber = RS_SWITCH;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(LCD_CTRL, &PinCfg);

	PinCfg.GPIO_PinNumber = RW_SWITCH;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(LCD_CTRL, &PinCfg);

	PinCfg.GPIO_PinNumber = ENABLE_SWITCH;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(LCD_CTRL, &PinCfg);


	//  DATA PINS OUTPUT with speed 10MHZ
	PinCfg.GPIO_PinNumber = GPIO_PIN_0;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_1;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_2;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_3;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_4;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_5;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_6;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);

	PinCfg.GPIO_PinNumber = GPIO_PIN_7;
	PinCfg.GPIO_Mode = GPIO_mode_OUTPUT_PP;
	PinCfg.GPIO_Output_Speed = GPIO_speed_OUTPUT_10M;
	MCAL_GPIO_Init(LCD_PORT,&PinCfg);


	MCAL_GPIO_WritePin(LCD_CTRL, ENABLE_SWITCH, GPIO_PIN_RESET);
	MCAL_GPIO_WritePin(LCD_CTRL, RS_SWITCH, GPIO_PIN_RESET);
	MCAL_GPIO_WritePin(LCD_CTRL, RW_SWITCH, GPIO_PIN_RESET);

	wait(20);

	LCD_clear_screen();
	LCD_WRITE_COMMAND(LCD_FUNCTION_8BIT_2LINES);
	LCD_WRITE_COMMAND(LCD_ENTRY_MODE);
	LCD_WRITE_COMMAND(LCD_BEGIN_AT_FIRST_ROW);
	LCD_WRITE_COMMAND(LCD_DISP_ON_CURSOR_BLINK);
}
//================================================================
void LCD_WRITE_COMMAND(unsigned char command)
{
	LCD_isbusy();
	MCAL_GPIO_WritePort(LCD_PORT, command);
	MCAL_GPIO_WritePin(LCD_CTRL, RW_SWITCH, GPIO_PIN_RESET);
	MCAL_GPIO_WritePin(LCD_CTRL, RS_SWITCH, GPIO_PIN_RESET);
	wait(1);
	LCD_KICK();
}
//================================================================
void LCD_WRITE_CHAR(unsigned char data)
{
	LCD_isbusy();
	MCAL_GPIO_WritePort(LCD_PORT, data);
	MCAL_GPIO_WritePin(LCD_CTRL, RW_SWITCH, GPIO_PIN_RESET);
	MCAL_GPIO_WritePin(LCD_CTRL, RS_SWITCH, GPIO_PIN_SET);
	wait(1);
	LCD_KICK();

}
//================================================================
void LCD_WRITE_string( char* data)
{
	int count = 0;
	while(*data >0)
	{
		LCD_WRITE_CHAR(*data++);
		count++;
		if(count==16)
		{
			LCD_GOTO_XY(2,0);
		}
		else if (count==32)
		{
			LCD_clear_screen();
			LCD_GOTO_XY(1,0);
			count=0;
		}

	}
}
//================================================================
