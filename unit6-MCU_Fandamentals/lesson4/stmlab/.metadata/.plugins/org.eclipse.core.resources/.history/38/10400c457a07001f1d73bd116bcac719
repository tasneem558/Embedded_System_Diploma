/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */
typedef volatile unsigned int vuint32_t;

#include <stdint.h>

//RCC
#define RCC_Base    0x40021000
#define RCC_APB2ENR *(vuint32_t *)( RCC_Base + 0x18)
#define RCC_IOPAEN  (1<<2)


//GPIO
#define GPIO_Base 0x40010800
#define GPIO_CRH  *(vuint32_t *)(GPIO_Base + 0x04)
#define GPIO_ODR  *(vuint32_t *)(GPIO_Base + 0x0C)

//EXTI
#define EXTI_Base 0x40010400
#define EXTI_IMR  *(vuint32_t *)(EXTI_Base + 0x00)
#define EXTI_RTSR *(vuint32_t *)(EXTI_Base + 0x08)

void clock_init(void)
{
	//enable clock GPOIA
	RCC_APB2ENR |= RCC_IOPAEN;
}

void GPIO_init()
{
	//pin13 portA output
	GPIO_CRH &=0xff0fffff;
	GPIO_CRH |=0x00200000;
}

int main(void)
{
	//enable EXTI 0 (Mask = 1)
	EXTI_IMR |=(1<<0);

	return 0;
}

void EXTI0_IRQHandler()
{
	//IRQ is happened EXTI0 >> PORTA pin0 _| rising
	// toggle led pin13
	GPIO_ODR ^= (1<<13);
}
